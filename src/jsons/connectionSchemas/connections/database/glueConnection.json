{
  "$id": "https://open-metadata.org/schema/entity/services/connections/database/glueConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "GlueConnection",
  "description": "Glue Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.database.GlueConnection",
  "definitions": {
    "glueType": {
      "description": "Service type.",
      "type": "string",
      "enum": [
        "Glue"
      ],
      "default": "Glue"
    }
  },
  "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "$ref": "#/definitions/glueType",
      "default": "Glue"
    },
    "awsConfig": {
      "title": "AWS Credentials Configuration",
      "$id": "https://open-metadata.org/security/credentials/awsCredentials.json",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "description": "AWS credentials configs.",
      "type": "object",
      "javaType": "org.openmetadata.schema.security.credentials.AWSCredentials",
      "properties": {
        "awsAccessKeyId": {
          "title": "AWS Access Key ID",
          "description": "AWS Access key ID.",
          "type": "string"
        },
        "awsSecretAccessKey": {
          "title": "AWS Secret Access Key",
          "description": "AWS Secret Access Key.",
          "type": "string",
          "format": "password"
        },
        "awsRegion": {
          "title": "AWS Region",
          "description": "AWS Region",
          "type": "string"
        },
        "awsSessionToken": {
          "title": "AWS Session Token",
          "description": "AWS Session Token.",
          "type": "string"
        },
        "endPointURL": {
          "title": "Endpoint URL",
          "description": "EndPoint URL for the AWS",
          "type": "string",
          "format": "uri"
        },
        "profileName": {
          "title": "Profile Name",
          "description": "The name of a profile to use with the boto session.",
          "type": "string"
        },
        "assumeRoleArn": {
          "title": "Role Arn for Assume Role",
          "description": "The Amazon Resource Name (ARN) of the role to assume. Required Field in case of Assume Role",
          "type": "string"
        },
        "assumeRoleSessionName": {
          "title": "Role Session Name for Assume Role",
          "description": "An identifier for the assumed role session. Use the role session name to uniquely identify a session when the same role is assumed by different principals or for different reasons. Required Field in case of Assume Role",
          "type": "string",
          "default": "OpenMetadataSession"
        },
        "assumeRoleSourceIdentity": {
          "title": "Source Identity for Assume Role",
          "description": "The Amazon Resource Name (ARN) of the role to assume. Optional Field in case of Assume Role",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "awsRegion"
      ]
    },
    "databaseName": {
      "title": "Database Name",
      "description": "Optional name to give to the database in OpenMetadata. If left blank, we will use default as the database name.",
      "type": "string"
    },
    "connectionOptions": {
      "title": "Connection Options",
      "javaType": "org.openmetadata.schema.services.connections.database.ConnectionOptions",
      "description": "Additional connection options to build the URL that can be sent to service during the connection.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "connectionArguments": {
      "title": "Connection Arguments",
      "javaType": "org.openmetadata.schema.services.connections.database.ConnectionArguments",
      "description": "Additional connection arguments such as security or protocol configs that can be sent to service during connection.",
      "type": "object",
      "additionalProperties": {
        ".{1,}": {
          "type": "string"
        }
      }
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "description": "Supports Metadata Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsDBTExtraction": {
      "description": "Supports DBT Extraction.",
      "type": "boolean",
      "default": true
    }
  },
  "additionalProperties": false,
  "required": [
    "awsConfig"
  ]
}