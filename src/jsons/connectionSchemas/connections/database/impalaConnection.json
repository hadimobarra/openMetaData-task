{
  "$id": "https://open-metadata.org/schema/entity/services/connections/database/impalaConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ImpalaConnection",
  "description": "Impala SQL Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.database.ImpalaConnection",
  "definitions": {
    "impalaType": {
      "description": "Service type.",
      "type": "string",
      "enum": [
        "Impala"
      ],
      "default": "Impala"
    },
    "impalaScheme": {
      "description": "SQLAlchemy driver scheme options.",
      "type": "string",
      "enum": [
        "impala",
        "impala4"
      ],
      "default": "impala"
    }
  },
  "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "$ref": "#/definitions/impalaType",
      "default": "Impala"
    },
    "scheme": {
      "title": "Connection Scheme",
      "description": "SQLAlchemy driver scheme options.",
      "$ref": "#/definitions/impalaScheme",
      "default": "impala"
    },
    "username": {
      "title": "Username",
      "description": "Username to connect to Impala. This user should have privileges to read all the metadata in Impala.",
      "type": "string"
    },
    "password": {
      "title": "Password",
      "description": "Password to connect to Impala.",
      "type": "string",
      "format": "password"
    },
    "hostPort": {
      "title": "Host and Port",
      "description": "Host and port of the Impala service.",
      "type": "string"
    },
    "authMechanism": {
      "title": "Authentication Mode",
      "description": "Authentication mode to connect to Impala.",
      "type": "string",
      "enum": [
        "NOSASL",
        "PLAIN",
        "GSSAPI",
        "LDAP",
        "JWT"
      ],
      "default": "PLAIN"
    },
    "kerberosServiceName": {
      "title": "Kerberos Service Name",
      "description": "If authenticating with Kerberos specify the Kerberos service name",
      "type": "string"
    },
    "databaseSchema": {
      "title": "Database Schema",
      "description": "Database Schema of the data source. This is optional parameter, if you would like to restrict the metadata reading to a single schema. When left blank, OpenMetadata Ingestion attempts to scan all the schemas.",
      "type": "string"
    },
    "databaseName": {
      "title": "Database Name",
      "description": "Optional name to give to the database in OpenMetadata. If left blank, we will use default as the database name.",
      "type": "string"
    },
    "useSSL": {
      "title": "Use SSL",
      "description": "Establish secure connection with Impala",
      "type": "boolean"
    },
    "authOptions": {
      "title": "URL Authentication Options",
      "description": "Authentication options to pass to Impala connector. These options are based on SQLAlchemy.",
      "type": "string"
    },
    "connectionOptions": {
      "title": "Connection Options",
      "javaType": "org.openmetadata.schema.services.connections.database.ConnectionOptions",
      "description": "Additional connection options to build the URL that can be sent to service during the connection.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "connectionArguments": {
      "title": "Connection Arguments",
      "javaType": "org.openmetadata.schema.services.connections.database.ConnectionArguments",
      "description": "Additional connection arguments such as security or protocol configs that can be sent to service during connection.",
      "type": "object",
      "additionalProperties": {
        ".{1,}": {
          "type": "string"
        }
      }
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "description": "Supports Metadata Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsDBTExtraction": {
      "description": "Supports DBT Extraction.",
      "type": "boolean",
      "default": true
    },
    "supportsProfiler": {
      "title": "Supports Profiler",
      "description": "Supports Profiler",
      "type": "boolean",
      "default": true
    }
  },
  "additionalProperties": false,
  "required": [
    "hostPort"
  ]
}