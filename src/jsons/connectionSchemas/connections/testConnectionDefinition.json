{
  "$id": "https://open-metadata.org/schema/entity/services/connections/testConnectionDefinition.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "TestConnectionDefinition",
  "description": "TestConnection is the definition that will encapsulate the steps required to test a connection to a specific service.",
  "type": "object",
  "javaType": "org.openmetadata.schema.entity.services.connections.TestConnectionDefinition",
  "javaInterfaces": [
    "org.openmetadata.schema.EntityInterface"
  ],
  "definitions": {
    "testConnectionStep": {
      "description": "Function that tests one specific element of the service. E.g., listing schemas, lineage, or tags.",
      "type": "object",
      "javaType": "org.openmetadata.schema.entity.services.connections.TestConnectionStep",
      "properties": {
        "name": {
          "description": "Name of the step being tested",
          "type": "string"
        },
        "description": {
          "description": "What is the goal of the step",
          "type": "string"
        },
        "errorMessage": {
          "description": "In case of error this message should be displayed on UI, We define this message manually on test connection definition",
          "type": "string"
        },
        "mandatory": {
          "description": "Is this step mandatory to be passed?",
          "type": "boolean",
          "default": true
        },
        "shortCircuit": {
          "description": "This field if set to true, indicates that the step is important enough to break the process in case of failure.",
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "mandatory",
        "description"
      ]
    }
  },
  "properties": {
    "id": {
      "description": "Unique identifier of this test case definition instance.",
      "type": "string",
      "format": "uuid"
    },
    "name": {
      "description": "Name of the Test Connection Definition. It should be the `type` of the service being tested, e.g., Mysql, or Snowflake.",
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "pattern": "^(?U)[\\w'\\- .&]+$"
    },
    "displayName": {
      "description": "Display Name that identifies this test definition.",
      "type": "string"
    },
    "description": {
      "description": "Description of the test connection def.",
      "$comment": "@om-field-type",
      "type": "string"
    },
    "fullyQualifiedName": {
      "description": "FullyQualifiedName same as `name`.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "steps": {
      "description": "Steps to test the connection. Order matters.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/testConnectionStep"
      }
    },
    "owner": {
      "description": "Owner of this TestConnection definition.",
      "$ref": "#/properties/owner/definitions/entityReferenceList/items",
      "default": null
    },
    "version": {
      "description": "Metadata version of the entity.",
      "type": "number",
      "multipleOf": 0.1,
      "default": 0.1,
      "minimum": 0.1
    },
    "updatedAt": {
      "description": "Last update time corresponding to the new version of the entity in Unix epoch time milliseconds.",
      "$comment": "@om-field-type",
      "@comment": "Note that during code generation this is converted into long",
      "type": "integer",
      "format": "utc-millisec"
    },
    "updatedBy": {
      "description": "User who made the update.",
      "type": "string"
    },
    "href": {
      "description": "Link to the resource corresponding to this entity.",
      "type": "string",
      "format": "uri"
    },
    "changeDescription": {
      "description": "Change that lead to this version of the entity.",
      "type": "object",
      "javaType": "org.openmetadata.schema.type.ChangeDescription",
      "properties": {
        "fieldsAdded": {
          "description": "Names of fields added during the version changes.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the entity field that changed.",
                "type": "string"
              },
              "oldValue": {
                "description": "Previous value of the field. Note that this is a JSON string and use the corresponding field type to deserialize it."
              },
              "newValue": {
                "description": "New value of the field. Note that this is a JSON string and use the corresponding field type to deserialize it."
              }
            },
            "additionalProperties": false
          }
        },
        "fieldsUpdated": {
          "description": "Fields modified during the version changes with old and new values.",
          "type": "array",
          "items": {
            "$ref": "#/properties/changeDescription/properties/fieldsAdded/items"
          }
        },
        "fieldsDeleted": {
          "description": "Fields deleted during the version changes with old value before deleted.",
          "type": "array",
          "items": {
            "$ref": "#/properties/changeDescription/properties/fieldsAdded/items"
          }
        },
        "previousVersion": {
          "description": "When a change did not result in change, this could be same as the current version.",
          "$ref": "#/properties/version"
        }
      },
      "additionalProperties": false
    },
    "deleted": {
      "description": "When `true` indicates the entity has been soft deleted.",
      "type": "boolean",
      "default": false
    }
  },
  "additionalProperties": false,
  "required": [
    "name",
    "steps"
  ]
}